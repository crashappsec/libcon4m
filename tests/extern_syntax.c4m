extern callecho(ptr) -> ptr {
  local: print(x: string) -> void
  pure: false
}

extern echoanint(cint) -> cvoid {
  local: print(x: int) -> void
  pure: false
}

extern exit(cint) -> cvoid {
  local: exit(x: int) -> void
  pure: false
}

extern abort() -> cvoid {
  local: abort() -> void
  pure: false
}

extern splitwrap(cstring, cstring) -> ptr {
  local: split(x: string, y, z: string) -> list[string]
  pure: true
}

// TODO: can't do varargs in a local; fix that.
extern whatever(ptr) -> ptr {
  local: something(a : int, b, x: dict[`a, b]) -> (int, *bool) -> bar
}

extern callecho2(ptr, ptr) -> ptr {
  local: print(x: string) -> void
  pure: false
  holds: a
  allocs: b, return
}

func foo (x : int, y, *z : int) {
}